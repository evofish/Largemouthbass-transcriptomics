## Automated GO scripts for enrichment analyses 
## Following the MWU method of the Matz lab (https://github.com/z0on/GO_MWU)
## Elliot Schmidts pipeline (https://github.com/schmidte10/GO-MWU-automation-) 

#Make sure all the necessary files to run the GO-MWU (Matz Lab), the iso2go.tab and the edited input file
#are available on the "working" folder.


library(plyr)
library(dplyr)
library(ape)
library(tidyr)
library(tidyverse)
library(readr) 

setwd("~/Desktop/large-mouth-bass/GO-analyses/")
temp = list.files(path = "./wgcna-enrichment/", pattern = "*.csv", full.names = F)
temp
mycol <- c("V1", "./wgcna-enrichment/")    
  dflist <- lapply(temp, function(f){ 
  read.csv(paste0("./wgcna-enrichment/", f),row.names = NULL, colClasses = c("character",rep("numeric",6)))[mycol]
  }) 
  
  dflist
  
  for (i in 1:length(dflist)) {
    dflist[[i]] <- dflist[[i]] %>% drop_na(log2FoldChange)
    }; head(dflist[[1]])   

  for (i in 1:length(dflist)) {
    assign(paste0(temp[i]), as.data.frame(dflist[[i]]))}
  
  dflist2 <- Filter(function(x) is.data.frame(get(x)), ls()); dflist2
  
 for (h in 1:length(dflist)) {
    write.csv(dflist[h], file = paste0(dflist2[h]), row.names=F, quote=F)}
  
  my_comparisons <- c("CC","BP","MF") 
  auto_results <- for (i in 1:length(dflist2)) {
    for(g in my_comparisons){ 
      input=paste0(dflist2[[i]])
      goAnnotations="florida/flo-GO-final.txt"
      goDatabase="go.obo"
      goDivision=paste0(g)
      # download .R file that contains a number of functions
      #source("gomwu.functions.R")
      #
      # Calculating stats. It might take ~3 min for MF and BP. Do not rerun it if you just want to replot the data with different cutoffs, go straight to gomwuPlot. If you change any of the numeric values below, delete the files that were generated in previos runs first.
      gomwuStats(input, goDatabase, goAnnotations, goDivision,
                 perlPath="perl", # replace with full path to perl executable if it is not in your system's PATH already
                 largest=0.1,  # a GO category will not be considered if it contains more than this fraction of the total number of genes
                 smallest=5,   # a GO category should contain at least this many genes to be considered
                 clusterCutHeight=0.25, # threshold for merging similar (gene-sharing) terms. See README for details.
                 #	Alternative="g" # by default the MWU test is two-tailed; specify "g" or "l" of you want to test for "greater" or "less" instead. 
                 #	Module=TRUE,Alternative="g" # un-remark this if you are analyzing a SIGNED WGCNA module (values: 0 for not in module genes, kME for in-module genes). In the call to gomwuPlot below, specify absValue=0.001 (count number of "good genes" that fall into the module)
                 #	Module=TRUE # un-remark this if you are analyzing an UNSIGNED WGCNA module 
      ) 
      # do not continue if the printout shows that no GO terms pass 10% FDR.
    }
  }
  
